import React, { Component } from 'react';
import { View, Text, Image, TouchableOpacity, WebView, Platform, BackAndroid } from 'react-native';
import styles from 'css/index'
// import page from 'comm/page'
// import {page} from 'comm/router';
import {page} from 'fkp-react-native-router';
import Icon from 'react-native-vector-icons/Ionicons';


let _page;
const WEBVIEW_REF = 'webview';

class Aaa extends Component {
    constructor(props){
        super(props)
        this.state = {
            url: this.props.data.url,
            status: 'No Page Loaded',
            backButtonEnabled: false,
            forwardButtonEnabled: false,
            loading: true,
            scalesPageToFit: true,
            header: null,
            footer: null
        };

        this.onShouldStartLoadWithRequest = this.onShouldStartLoadWithRequest.bind(this);
        this.onNavigationStateChange = this.onNavigationStateChange.bind(this);
        this.webGoBack = this.webGoBack.bind(this)

    }

    onShouldStartLoadWithRequest(event) {
        // Implement any custom loading logic here, don't forget to return!
        return true;
    }

    componentWillMount(){
        if (this.props.data.header){
            this.setState({
                header: this.props.data.header
            })
        }

        if (this.props.data.footer){
            this.setState({
                footer: this.props.data.footer
            })
        }

    }

    componentDidMount(){ }

    webGoBack(){
        this.refs[WEBVIEW_REF].goBack();
    }

    onNavigationStateChange(navState) {
        this.setState({
            backButtonEnabled: navState.canGoBack,
            forwardButtonEnabled: navState.canGoForward,
            url: navState.url,
            status: navState.title,
            loading: navState.loading,
            scalesPageToFit: true,

            onlyWeb: this.props.onlyWeb||false,
        });
    }

    render(){
        H5Back = this;
        let navBar;
        if (!this.state.onlyWeb){
            navBar = (
                <TouchableOpacity
                    style={[styles.innerBg, styles.navBar]}
                    underlayColor="rgb(199, 199, 199)"
                    onPress={() => {
                        _page.back()
                    }} >
                    <View style={styles.listView}>
                        <Icon name="ios-arrow-back" size={30} color="rgb(13, 13, 13)"/>
                    </View>
                </TouchableOpacity>
            )
        }

        let backButton;
        if (this.state.onlyWeb &&
                    this.state.url.indexOf('?topic=')>-1
                ){
                backButton = (
                    <TouchableOpacity
                        style={[styles.goback]}
                        onPress={this.webGoBack}
                    >
                        <Image source={images.arrowLeft} style={{width:48, height:48}}/>
                    </TouchableOpacity>
                )
        }

        return (
            <View style={{flex: 1}}>
                {navBar}
                {this.state.header}
                <WebView
                  ref={WEBVIEW_REF}
                  automaticallyAdjustContentInsets={false}
                  style={styles.webView}
                  source={{uri: this.state.url}}
                  javaScriptEnabled={true}
                  domStorageEnabled={true}
                  decelerationRate="normal"
                  onNavigationStateChange={this.onNavigationStateChange}
                  onShouldStartLoadWithRequest={this.onShouldStartLoadWithRequest}
                  startInLoadingState={true}
                  scalesPageToFit={this.state.scalesPageToFit}
                />
                {this.state.footer}
                {backButton}
            </View>
        )
    }
}

export let wrender = function(data){
    return <Aaa data={data} onlyWeb={true}/>
}

export default function(id){
    return page.new({
        trigger: function(self, intent){
            console.log('========= xxx');
            _page = this;
            return (
                <Aaa data={intent} />
            )
        }
    })
}
