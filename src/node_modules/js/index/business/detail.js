import React, { Component } from 'react';
import { View, Text, Image, TouchableHighlight, WebView } from 'react-native';
import styles from 'css/index'
import page from 'comm/page'
import Icon from 'react-native-vector-icons/Ionicons';


let _page;

const WEBVIEW_REF = 'webview'
class Aaa extends Component {
    constructor(props){
        super(props)
        this.state = {
          url: 'http://www.agzgz.com?topic='+_page.intent.topic,
          status: 'No Page Loaded',
          backButtonEnabled: false,
          forwardButtonEnabled: false,
          loading: true,
          scalesPageToFit: true,
        };

        this.onShouldStartLoadWithRequest = this.onShouldStartLoadWithRequest.bind(this);
        this.onNavigationStateChange = this.onNavigationStateChange.bind(this);
    }

    onShouldStartLoadWithRequest(event) {
    // Implement any custom loading logic here, don't forget to return!
        return true;
    }

    onNavigationStateChange(navState) {
        this.setState({
            backButtonEnabled: navState.canGoBack,
            forwardButtonEnabled: navState.canGoForward,
            url: navState.url,
            status: navState.title,
            loading: navState.loading,
            scalesPageToFit: true
        });
    }

    render(){
        return (
            <View style={{flex: 1}}>
                <TouchableHighlight
                    style={[styles.innerBg, {paddingTop: 30,paddingLeft: 10,}]}
                    underlayColor="rgb(199, 199, 199)"
                    onPress={() => {
                        _page.back()
                    }} >
                    <View style={styles.listView}>
                        <Icon name="ios-arrow-back" size={30} color="rgb(13, 13, 13)"/>
                    </View>
                </TouchableHighlight>

                <WebView
                  ref={WEBVIEW_REF}
                  automaticallyAdjustContentInsets={false}
                  style={styles.webView}
                  source={{uri: this.state.url}}
                  javaScriptEnabled={true}
                  domStorageEnabled={true}
                  decelerationRate="normal"
                  onNavigationStateChange={this.onNavigationStateChange}
                  onShouldStartLoadWithRequest={this.onShouldStartLoadWithRequest}
                  startInLoadingState={true}
                  scalesPageToFit={this.state.scalesPageToFit}
                />
            </View>
        )
    }
}

export default function(id){
    return page.new({
        trigger: function(self, intent){
            _page = this;
            _page.intent = intent;
            return (
                <Aaa />
            )
        }
    })
}
