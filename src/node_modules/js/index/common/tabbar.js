
import React, { Component } from 'react';
import { View, Text, Image, TouchableHighlight, Platform } from 'react-native';
import styles from 'css/index';
import tabs from 'comp/modules/tabbar/test';
import Icon from 'react-native-vector-icons/Ionicons';
// import {simpleScrollTab as SimpleScrollTab} from './scrolltab';
import {simpleScrollTab as SimpleScrollTab} from './scrollabletabs';
import UIExplorerBlock from 'comp/widgets/UIExplorerBlock';
import {wrender} from 'comp/modules/webrender'  //only webview


// import page from 'comm/page'   //router must use this function
import {page} from 'comm/router';

let router;

let activeStyle = {fontSize:11}

// tab button
let blogIconButton = [
    // normal stat
    <View>
        <Icon name="ios-home-outline" size={30} color="#4F8EF7" />
        <Text style={{fontSize:11}}>博客</Text>
    </View>,

    // active stat
    <View>
        <Icon name="ios-home" size={30} color="#4F8EF7" />
        <Text style={activeStyle}>博客</Text>
    </View>
]

let msgIconButton = [
    <View>
        <Icon name="ios-chatbubbles-outline" size={30} color="#4F8EF7" />
        <Text style={{fontSize:11}}>说明</Text>
    </View>,
    <View>
        <Icon name="ios-chatbubbles" size={30} color="#4F8EF7" />
        <Text style={activeStyle}>说明</Text>
    </View>
]

let setIconButton = [
    <View>
        <Icon name="ios-settings-outline" size={30} color="#4F8EF7" />
        <Text style={{fontSize:11}}>聊天</Text>
    </View>,
    <View>
        <Icon name="ios-settings" size={30} color="#4F8EF7" />
        <Text style={activeStyle}>聊天</Text>
    </View>
]

let bdgIconButton = [
    <View>
        <Icon name="ios-settings-outline" size={30} color="#4F8EF7" />
        <Text style={{fontSize:11}}>红点</Text>
    </View>,
    <View>
        <Icon name="ios-settings" size={30} color="#4F8EF7" />
        <Text style={activeStyle}>红点</Text>
    </View>
]

let rtIconButton = [
    <View>
        <Icon name="ios-settings-outline" size={30} color="#4F8EF7" />
        <Text style={{fontSize:11}}>路由</Text>
    </View>,
    <View>
        <Icon name="ios-settings" size={30} color="#4F8EF7" />
        <Text style={activeStyle}>路由</Text>
    </View>
]


// tags item config

let _blog = {
    title: blogIconButton,
    content: <SimpleScrollTab />,
    method:()=>{}
}

let _explain = (
    <View>
        <UIExplorerBlock title="FKP">
          <Text>
              FKP系列现在包含有FKPJS框架（全栈JS）/ FKP-RN即你现在看到的这一个基于react-native实现的app框架，兼容ANDROID/IOS是FKP-RN的坚持
          </Text>
          <A href="http://www.agzgz.com">
              <Text style={{color: "#2f9c0a",fontSize:14}}>官网</Text>
          </A>
          <A href="https://github.com/webkixi/FKP-REST">
              <Text style={{color: "#2f9c0a",fontSize:14}}>GITHUB-FKPJS</Text>
          </A>
          <A href="https://github.com/webkixi/FKP-REACT-NATIVE">
              <Text style={{color: "#2f9c0a",fontSize:14}}>GITHUB-FKP-REACT-NATIVE</Text>
          </A>
        </UIExplorerBlock>
    </View>
)
// content: 'content为字符串会自动在tabs里生成结构',
let _msg = {
    title: msgIconButton,
    content: (_explain),
    method:()=>{
        console.log('消息中心')
        console.log(SAX.lister());
    }
}

// 小红点数据
// 通过sax设置小红点
let initSaxData = {
    data: {
        badge: {
            badge: 3
        }
    }
}

let _set = {
    title: setIconButton,
    content: (
        <View>
            <Text style={{padding:10, fontSize:19,fontWeight:'500', color:'#666'}}>H5的聊天会触发websocket，激活app中的websocket响应，这里会弹出Toast.show显示信息，去agzgz.com/chat上试试</Text>
        </View>
    ),
    method:()=>{
        console.log('设置中心')
        SAX.setter('TabBlog', initSaxData)
    }
}

// 小红点数据
// 通过sax设置小红点
let saxData = {
    data: {
        badge: {
            message: 3,
            setting: 2,
            badge: 11
        }
    }
}
let _bdg = {
    title: bdgIconButton,
    content: (<UIExplorerBlock title="SAX，store and action X">
              <Text>SAX是FKP-RN的redux，比redux简单、直接，FKP-JS同样适用，通过SAX动态更新组件的状态，如小红点</Text>
            </UIExplorerBlock>),
    badge: 1,
    method:()=>{
        SAX.setter('TabBlog', saxData)
    }
}

// 生成tabbar
let Home = tabs({
        blog: _blog,
        message: _msg,
        setting: _set,
        badge: _bdg
    },
    // options
    { sax: 'TabBlog' }
)

export default function blog(id){
    return page.new({
        trigger: function(self, intent){
            return <Home />
        }
    })
}
